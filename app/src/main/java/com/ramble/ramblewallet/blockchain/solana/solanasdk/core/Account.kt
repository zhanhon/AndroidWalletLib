package com.ramble.ramblewallet.blockchain.solana.solanasdk.core

import com.ramble.ramblewallet.blockchain.solana.solanasdk.utils.TweetNaclFast
import org.bitcoinj.crypto.MnemonicCode

class Account {
    private var keyPair: TweetNaclFast.Signature.KeyPair

    constructor(secretKey: ByteArray) {
        keyPair = TweetNaclFast.Signature.keyPair_fromSecretKey(secretKey)
    }

    private constructor(keyPair: TweetNaclFast.Signature.KeyPair) {
        this.keyPair = keyPair
    }

    val publicKey: PublicKey
        get() = PublicKey(keyPair.publicKey)

    val secretKey: ByteArray
        get() = keyPair.secretKey

    companion object {
        /**
         * Derive a Solana account from a Mnemonic generated by the Solana CLI using bip44 Mnemonic with deviation path of
         * m/44H/501H/0H/0H
         * @param words seed words
         * @param passphrase seed passphrase
         * @return Solana account
         */
        fun fromBip44Mnemonic(
            words: List<String>,
            walletIndex: Int,
            passphrase: String = ""
        ): Account {
            val solanaBip44 = SolanaBip44(walletIndex)
            val seed = MnemonicCode.toSeed(words, passphrase)
            val privateKey: ByteArray = solanaBip44.getPrivateKeyFromSeed(seed)
            return Account(TweetNaclFast.Signature.keyPair_fromSeed(privateKey))
        }

        fun privateKeyToWallet(secretKey: ByteArray): Account {
            return Account(secretKey)
        }
    }
}
